import tkinter as tk
from tkinter import ttk
#You need to add sympy, to do this, write into the CONSOLE this: pip install sympy 
from sympy import symbols, Not, And, Or
from sympy.logic.boolalg import simplify_logic
from sympy.parsing.sympy_parser import (standard_transformations, implicit_multiplication_application)

# Function to parse Boolean expressions with correct precedence
def parse_boolean_expr(expr_text):
    transformations = (standard_transformations + (implicit_multiplication_application,))
    # Replace "+" with "Or" and "." with "And"
    expr_text = expr_text.replace('+', ' | ').replace('.', ' & ')
    return parse_expr(expr_text, transformations=transformations, evaluate=False)

# Function to simplify the Boolean expression
def simplify_expression():
    expr_text = expr_entry.get()
    
    try:
        # Parse the expression and simplify
        expr = parse_boolean_expr(expr_text)
        simplified_expr = simplify_logic(expr, form='dnf')  # Simplify to Disjunctive Normal Form
        
        # Display the simplified expression
        result_label.config(text=f"Simplified expression: {simplified_expr}")
    except Exception as e:
        # Handle errors
        result_label.config(text=f"Error: {e}")

# Function to insert text into the entry
def insert_text(text):
    expr_entry.insert(tk.END, text)

# Create the main application window
app = tk.Tk()
app.title("Boolean Algebra Simplifier")
app.geometry("700x300")

# Instruction label
instruction_label = ttk.Label(app, text="Enter a Boolean expression (variables: A, B, C, D):")
instruction_label.pack(pady=10)

# Entry widget for the expression
expr_entry = ttk.Entry(app, width=50)
expr_entry.pack(pady=10)

# Button to insert '!'
not_button = ttk.Button(app, text='!', command=lambda: insert_text("Not("))
not_button.pack(side=tk.LEFT, padx=5)

# Button for brackets
open_bracket_button = ttk.Button(app, text='(', command=lambda: insert_text("("))
open_bracket_button.pack(side=tk.LEFT, padx=5)

close_bracket_button = ttk.Button(app, text=')', command=lambda: insert_text(")"))
close_bracket_button.pack(side=tk.LEFT, padx=5)

# Button to insert OR and AND
or_button = ttk.Button(app, text='+', command=lambda: insert_text("+"))
or_button.pack(side=tk.LEFT, padx=5)

and_button = ttk.Button(app, text='.', command=lambda: insert_text("."))
and_button.pack(side=tk.LEFT, padx=5)

# Button to simplify the expression
simplify_button = ttk.Button(app, text="Simplify", command=simplify_expression)
simplify_button.pack(pady=10)

# NOTE for symbol interpretation
note_label = ttk.Label(app, text="NOTE IN ANSWERS: '|' = AND, '~' = OR")
note_label.pack(pady=10)

# Label to display results or errors
result_label = ttk.Label(app, text="")
result_label.pack(pady=10)

# Start the Tkinter event loop
app.mainloop()
